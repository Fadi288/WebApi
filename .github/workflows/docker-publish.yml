name: Build and Push WebAPI Docker Image

on:
  schedule:
    - cron: '40 5 * * *'     # Run daily at 05:40 UTC
  push:
    branches: [ "main" ]     # On push to main branch
    tags: [ 'v*.*.*' ]       # On version tags (like v1.2.3)
  pull_request:
    branches: [ "main" ]     # On PR targeting main branch

env:
  # Change to docker.io if you push to Docker Hub
  REGISTRY: docker.io
  IMAGE_NAME: fadisami/webapiapp:prod

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Optional: Skip build if no changes in WebApi folder
      - name: Check for changes in WebApi folder
        id: changes
        run: |
          echo "changed=false" >> $GITHUB_OUTPUT
          if git diff --name-only ${{ github.sha }} ${{ github.event.before }} | grep '^WebApi/' > /dev/null; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Exit if no WebApi changes
        if: steps.changes.outputs.changed == 'false' && github.event_name != 'schedule'
        run: echo "No changes in WebApi folder, skipping build." && exit 0

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v2
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: fadisami/webapiapp:prod
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
